{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acost\\\\Desktop\\\\BarChat\\\\client\\\\src\\\\views\\\\Discover.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport useGeoLocation from '../components/useGeoLocation';\nimport NavBar from '../components/NavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Discover = () => {\n  _s();\n\n  /*#__PURE__*/\n  _jsxDEV(NavBar, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n\n  const location = useGeoLocation();\n  const {\n    id\n  } = useParams();\n  const [firstName, setFirstName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n  useEffect(() => {\n    axios.get(`http://localhost:8000/api/users/${id}`).then(res => {\n      setFirstName(res.data.firstName);\n      setImage(res.data.image);\n    }).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [location.loaded ? JSON.stringify(location) : \"Location data not available yet\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Discover users near you!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Discover, \"x+1cj0dKkWslTOsXisUH0Iel/SA=\", false, function () {\n  return [useGeoLocation, useParams];\n});\n\n_c = Discover;\nexport default Discover;\n\nvar _c;\n\n$RefreshReg$(_c, \"Discover\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","useGeoLocation","NavBar","Discover","location","id","firstName","setFirstName","image","setImage","get","then","res","data","catch","err","console","log","loaded","JSON","stringify"],"sources":["C:/Users/acost/Desktop/BarChat/client/src/views/Discover.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport useGeoLocation from '../components/useGeoLocation';\r\nimport NavBar from '../components/NavBar';\r\n\r\n\r\n\r\nconst Discover = () => {\r\n\r\n    <NavBar/>\r\n\r\n    const location = useGeoLocation();\r\n\r\n    const { id } = useParams();\r\n\r\n    const [firstName, setFirstName] = useState(\"\");\r\n    const [image, setImage] = useState(\"\");\r\n\r\n    useEffect( () => {\r\n        axios.get(`http://localhost:8000/api/users/${id}`)\r\n            .then( res => {\r\n                setFirstName(res.data.firstName);\r\n                setImage(res.data.image);\r\n            })\r\n            .catch( (err) => console.log(err))\r\n    }, [])\r\n\r\n\r\n    return (\r\n    <>\r\n        { \r\n        location.loaded ? JSON.stringify(location) : \"Location data not available yet\"\r\n        }\r\n        <p>Discover users near you!</p>\r\n    </>\r\n    )\r\n\r\n}\r\n\r\nexport default Discover;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;;AAIA,MAAMC,QAAQ,GAAG,MAAM;EAAA;;EAEnB;EAAA,QAAC,MAAD;IAAA;IAAA;IAAA;EAAA;;EAEA,MAAMC,QAAQ,GAAGH,cAAc,EAA/B;EAEA,MAAM;IAAEI;EAAF,IAASN,SAAS,EAAxB;EAEA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EAEAD,SAAS,CAAE,MAAM;IACbG,KAAK,CAACU,GAAN,CAAW,mCAAkCL,EAAG,EAAhD,EACKM,IADL,CACWC,GAAG,IAAI;MACVL,YAAY,CAACK,GAAG,CAACC,IAAJ,CAASP,SAAV,CAAZ;MACAG,QAAQ,CAACG,GAAG,CAACC,IAAJ,CAASL,KAAV,CAAR;IACH,CAJL,EAKKM,KALL,CAKaC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALrB;EAMH,CAPQ,EAON,EAPM,CAAT;EAUA,oBACA;IAAA,WAEIX,QAAQ,CAACc,MAAT,GAAkBC,IAAI,CAACC,SAAL,CAAehB,QAAf,CAAlB,GAA6C,iCAFjD,eAII;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA,gBADA;AASH,CA9BD;;GAAMD,Q;UAIeF,c,EAEFF,S;;;KANbI,Q;AAgCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}