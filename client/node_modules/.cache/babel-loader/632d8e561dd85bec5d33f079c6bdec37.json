{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\n\nconst useGeoLocation = () => {\n  _s();\n\n  const [location, setLocation] = useState({\n    loaded: false,\n    coordinates: {\n      lat: \"\",\n      lng: \"\"\n    }\n  });\n\n  const onSuccess = location => {\n    setLocation({\n      loaded: true,\n      coordinates: {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      }\n    });\n  };\n\n  const onError = error => {\n    setLocation({\n      laoded: true,\n      error\n    });\n  };\n\n  useEffect(() => {\n    if (!(\"geolocaiton\" in navigator)) {\n      onError({\n        code: 0,\n        message: \"Geolocation not supported\"\n      });\n    }\n\n    navigator.geolocation.getCurrentPosition(onSuccess, onError);\n  }, []);\n  return location;\n};\n\n_s(useGeoLocation, \"YDnM+xKmYI18UI707UU5Xs2ZdBk=\");\n\nexport default useGeoLocation;","map":{"version":3,"names":["React","useEffect","useState","useGeoLocation","location","setLocation","loaded","coordinates","lat","lng","onSuccess","coords","latitude","longitude","onError","error","laoded","navigator","code","message","geolocation","getCurrentPosition"],"sources":["C:/Users/acost/Desktop/BarChat/client/src/components/useGeoLocation.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\r\n\r\nconst useGeoLocation = () => {\r\n\r\n    const [location, setLocation] = useState({\r\n        loaded: false,\r\n        coordinates: { lat: \"\", lng: \"\"}\r\n    });\r\n\r\n    const onSuccess = location => {\r\n        setLocation({\r\n            loaded: true,\r\n            coordinates: {\r\n                lat: location.coords.latitude,\r\n                lng: location.coords.longitude,\r\n            }\r\n        });\r\n    };\r\n\r\n    const onError = error => {\r\n        setLocation({\r\n            laoded: true,\r\n            error,\r\n        })\r\n    }\r\n\r\n    useEffect( () => {\r\n        if ( !(\"geolocaiton\" in navigator) ) {\r\n            onError ({\r\n                code: 0,\r\n                message: \"Geolocation not supported\"\r\n                })\r\n        }\r\n        navigator.geolocation.getCurrentPosition(onSuccess, onError);\r\n\r\n    }, [])\r\n\r\n\r\n    return location\r\n};\r\n\r\nexport default useGeoLocation;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA0C,OAA1C;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAEzB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BH,QAAQ,CAAC;IACrCI,MAAM,EAAE,KAD6B;IAErCC,WAAW,EAAE;MAAEC,GAAG,EAAE,EAAP;MAAWC,GAAG,EAAE;IAAhB;EAFwB,CAAD,CAAxC;;EAKA,MAAMC,SAAS,GAAGN,QAAQ,IAAI;IAC1BC,WAAW,CAAC;MACRC,MAAM,EAAE,IADA;MAERC,WAAW,EAAE;QACTC,GAAG,EAAEJ,QAAQ,CAACO,MAAT,CAAgBC,QADZ;QAETH,GAAG,EAAEL,QAAQ,CAACO,MAAT,CAAgBE;MAFZ;IAFL,CAAD,CAAX;EAOH,CARD;;EAUA,MAAMC,OAAO,GAAGC,KAAK,IAAI;IACrBV,WAAW,CAAC;MACRW,MAAM,EAAE,IADA;MAERD;IAFQ,CAAD,CAAX;EAIH,CALD;;EAOAd,SAAS,CAAE,MAAM;IACb,IAAK,EAAE,iBAAiBgB,SAAnB,CAAL,EAAqC;MACjCH,OAAO,CAAE;QACLI,IAAI,EAAE,CADD;QAELC,OAAO,EAAE;MAFJ,CAAF,CAAP;IAIH;;IACDF,SAAS,CAACG,WAAV,CAAsBC,kBAAtB,CAAyCX,SAAzC,EAAoDI,OAApD;EAEH,CATQ,EASN,EATM,CAAT;EAYA,OAAOV,QAAP;AACH,CArCD;;GAAMD,c;;AAuCN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}